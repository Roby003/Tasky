@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
@model Tasky.Models.Project
<div class="card">
    <div class="card-header d-flex justify-content-between align-items-center">
        <h2 class="card-title">@Model.Name</h2>
        <a href="@Url.Action("AddMember", "Projects", new { project_id = @Model.Id })" class="btn btn-primary">Add Member</a>
    </div>
    <!-- Rest of your card content -->
</div>


@* <div class="card-body">

    <h3 class="card-title alert-success py-3 px-3 rounded-2">@Model.Name</h3>

    <div class="card-text"></div>

</div>
 *@
@if (TempData["message"] != null)
{
    <div class="alert @ViewBag.Alert p-3 rounded-3 text-center mb-5">
        @ViewBag.Message
    </div>
}


<link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
<title>Trello-like Layout</title>
<style>
    .column {
        border: 1px solid #ccc;
        border-radius: 5px;
        padding: 10px;
        margin: 10px;
        min-height: 100px;
    }
</style>

<div id="modal-placeholder"></div> @* where the modal will anchor once it is loaded *@
<div class="container-fluid mt-4">
    <div class="row">
        <div class="col-md-4">
            <div id="left" class="column bg-light">
                <div id="innerCards">

                <h2>Not Started</h2>
                @foreach (var task in Model.Tasks)
                {
                    if (task.Status == "notstarted")
                    {
                            <div class="card mb-3" draggable="true" data-task-id="@task.Id">
                            <div class="card-body">
                                <h5 class="card-title">@task.Descriere</h5>
                                <p class="card-text"><strong>Status:</strong> <span id="status"> @task.Status</span></p>
                                <p class="card-text"><strong>Start Date:</strong> @task.DataStart?.ToShortDateString()</p>
                                <p class="card-text"><strong>Deadline:</strong> @task.DataFinalizare?.ToShortDateString()</p>
                                    @if (@task.User != null)
                                    {
                                        <p class="card-text"><strong>Membru Responsabil:</strong> @task.User.UserName</p>

                                    }

                                @* edit task *@
                                    <div class="container d-flex justify-content-between ps-0">
                                        <button type="button" class="btn btn-primary" data-toggle="ajax-modal" data-target="#taskModal" data-url="@Url.Action("AddTask",new{ taskId=@task.Id})">  
                                            Edit Task
                                        </button>
                                        <button type="button"  class="btn btn-primary" data-toggle="ajax-modal" data-target="#taskShowModal" data-url="@Url.Action("ShowTask",new{taskId=@task.Id})">
                                            Show Task
                                        </button>
                                        <div class="d-flex align-items-center">
                                            <!-- Flexbox container -->
                                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-chat" viewBox="0 0 16 16">
                                                <path d="M2.678 11.894a1 1 0 0 1 .287.801 10.97 10.97 0 0 1-.398 2c1.395-.323 2.247-.697 2.634-.893a1 1 0 0 1 .71-.074A8.06 8.06 0 0 0 8 14c3.996 0 7-2.807 7-6 0-3.192-3.004-6-7-6S1 4.808 1 8c0 1.468.617 2.83 1.678 3.894m-.493 3.905a21.682 21.682 0 0 1-.713.129c-.2.032-.352-.176-.273-.362a9.68 9.68 0 0 0 .244-.637l.003-.01c.248-.72.45-1.548.524-2.319C.743 11.37 0 9.76 0 8c0-3.866 3.582-7 8-7s8 3.134 8 7-3.582 7-8 7a9.06 9.06 0 0 1-2.347-.306c-.52.263-1.639.742-3.468 1.105z" />
                                            </svg>
                                            <div class="ml-1">@task.Comments.Count</div>
                                        </div>
                                    </div>
                            </div>
                        </div>


                        
                    }
                }
                <br />
                </div>
                <button class="btn btn-primary" data-toggle="ajax-modal" data-target="#taskModal" data-url="@Url.Action("AddTask",new{projectId=Model.Id})">Add Task</button>

            </div>
        </div>
        <div class="col-md-4">
            <div id = "middle" class="column bg-light">
                <h2>In Progress</h2>
                @foreach (var task in Model.Tasks)
                {
                    if (task.Status == "working")
                    {
                        <div class="card mb-3" draggable="true" data-task-id="@task.Id">
                            <div class="card-body">
                                <h5 class="card-title">@task.Descriere</h5>                              
                                <p class="card-text"><strong>Status:</strong> <span id="status"> @task.Status</span></p>
                                <p class="card-text"><strong>Start Date:</strong> @task.DataStart?.ToShortDateString()</p>
                                <p class="card-text"><strong>Deadline:</strong> @task.DataFinalizare?.ToShortDateString()</p>
                                @if (@task.User != null)
                                {
                                    <p class="card-text"><strong>Membru Responsabil:</strong> @task.User.UserName</p>

                                }
                                @* edit task *@
                                <div class="container d-flex justify-content-between ps-0">
                                    <button type="button" class="btn btn-primary" data-toggle="ajax-modal" data-target="#taskModal" data-url="@Url.Action("AddTask",new{ taskId=@task.Id})">
                                        Edit Task
                                    </button>
                                    <button type="button" class="btn btn-primary" data-toggle="ajax-modal" data-target="#taskShowModal" data-url="@Url.Action("ShowTask",new{taskId=@task.Id})">
                                        Show Task
                                    </button>
                                    <div class="d-flex align-items-center">
                                        <!-- Flexbox container -->
                                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-chat" viewBox="0 0 16 16">
                                            <path d="M2.678 11.894a1 1 0 0 1 .287.801 10.97 10.97 0 0 1-.398 2c1.395-.323 2.247-.697 2.634-.893a1 1 0 0 1 .71-.074A8.06 8.06 0 0 0 8 14c3.996 0 7-2.807 7-6 0-3.192-3.004-6-7-6S1 4.808 1 8c0 1.468.617 2.83 1.678 3.894m-.493 3.905a21.682 21.682 0 0 1-.713.129c-.2.032-.352-.176-.273-.362a9.68 9.68 0 0 0 .244-.637l.003-.01c.248-.72.45-1.548.524-2.319C.743 11.37 0 9.76 0 8c0-3.866 3.582-7 8-7s8 3.134 8 7-3.582 7-8 7a9.06 9.06 0 0 1-2.347-.306c-.52.263-1.639.742-3.468 1.105z" />
                                        </svg>
                                        <div class="ml-1">@task.Comments.Count</div>
                                    </div>
                                </div>

                        
                            </div>
                        </div>
                    }

                }
            </div>
        </div>
        <div class="col-md-4">
            <div id="right" class="column bg-light">
                <h2>Completed</h2>
                @foreach (var task in Model.Tasks)
                {
                    if(task.Status == "completed")
                    {
                        <div class="card mb-3" draggable="true" data-task-id="@task.Id">
                            <div class="card-body">
                                <h5 class="card-title">@task.Descriere</h5>
                                <p class="card-text"><strong>Status:</strong> <span id="status"> @task.Status</span></p>
                                <p class="card-text"><strong>Start Date:</strong> @task.DataStart?.ToShortDateString()</p>
                                <p class="card-text"><strong>Deadline:</strong> @task.DataFinalizare?.ToShortDateString()</p>
                                @if (@task.User != null)
                                {
                                    <p class="card-text"><strong>Membru Responsabil:</strong> @task.User.UserName</p>

                                }
                                @* edit task *@
                                <div class="container d-flex justify-content-between ps-0">
                                    <button type="button" class="btn btn-primary" data-toggle="ajax-modal" data-target="#taskModal" data-url="@Url.Action("AddTask",new{ taskId=@task.Id})">
                                        Edit Task
                                    </button>
                                    <button type="button" class="btn btn-primary" data-toggle="ajax-modal" data-target="#taskShowModal" data-url="@Url.Action("ShowTask",new{taskId=@task.Id})">
                                        Show Task
                                    </button>
                                    <div class="d-flex align-items-center">
                                        <!-- Flexbox container -->
                                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-chat" viewBox="0 0 16 16">
                                            <path d="M2.678 11.894a1 1 0 0 1 .287.801 10.97 10.97 0 0 1-.398 2c1.395-.323 2.247-.697 2.634-.893a1 1 0 0 1 .71-.074A8.06 8.06 0 0 0 8 14c3.996 0 7-2.807 7-6 0-3.192-3.004-6-7-6S1 4.808 1 8c0 1.468.617 2.83 1.678 3.894m-.493 3.905a21.682 21.682 0 0 1-.713.129c-.2.032-.352-.176-.273-.362a9.68 9.68 0 0 0 .244-.637l.003-.01c.248-.72.45-1.548.524-2.319C.743 11.37 0 9.76 0 8c0-3.866 3.582-7 8-7s8 3.134 8 7-3.582 7-8 7a9.06 9.06 0 0 1-2.347-.306c-.52.263-1.639.742-3.468 1.105z" />
                                        </svg>
                                        <div class="ml-1">@task.Comments.Count</div>
                                    </div>
                                </div>


                            </div>
                        </div>
                    }

                }
            </div>
        </div>
    </div>
</div>
<form method="post" asp-controller="Tasks" asp-action="UpdateStatus" id="updateStatusForm">
    <input type="hidden" name="taskId" id="taskId" />
    <input type="hidden" name="newStatus" id="newStatus" />
</form>
<script>

    function showTaskModal(taskId) {
     
        $('#taskShowModal_' + taskId).modal('show');
    }
    let list = document.getElementsByClassName("card mb-3");
    let left = document.getElementById("left");
    let right = document.getElementById("right");
    let middle = document.getElementById("middle");
    for (item of list) {
        item.addEventListener("dragstart", function (e) {
            let selected = e.target;
            let taskId = selected.dataset.taskId;
            let statusElement = selected.querySelector('.card-text span');
            console.log(statusElement.innerText);

            left.addEventListener("dragover", function (e) {
                e.preventDefault();
            });
            left.addEventListener("drop", function (e) {
               //left.appendChild(selected);
               let innerCards=left.querySelector("#innerCards")
               innerCards.appendChild(selected)
                selected = null;
                if (statusElement.innerText != "notstarted") {
                    updateTaskStatus(taskId, "notstarted");
                    statusElement.innerText = "notstarted";
                }
                
            });
            right.addEventListener("dragover", function (e) {
                e.preventDefault();
            });
            right.addEventListener("drop", function (e) {
                right.appendChild(selected);
                selected = null;

                if (statusElement.innerText != "completed") {
                    updateTaskStatus(taskId, "completed");
                    statusElement.innerText = "completed";
                }

            });
            middle.addEventListener("dragover", function (e) {
                e.preventDefault();
            });
            middle.addEventListener("drop", function (e) {
                middle.appendChild(selected);
                selected = null;
                if (statusElement.innerText != "working") {
                    updateTaskStatus(taskId, "working");
                    statusElement.innerText = "working";
                }

            });
        })
    }
    
    
    function updateTaskStatus(taskId, newStatus) {

        $("#taskId").val(taskId);
        $("#newStatus").val(newStatus);

        // Submit the form using AJAX
        $.ajax({
            type: "POST",
            url: $("#updateStatusForm").attr("action"),
            data: $("#updateStatusForm").serialize(),
            success: function (result) {
                // Handle success, if needed
                console.log(result);
            },
            error: function (error) {
                // Handle error, if needed
                console.error(error);
            }
        });

    }
    
</script>


<br />
<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

<br />
<br />
<br />
<br />

